Martin Escardo, Marc Bezem, Thierry Coquand, and Peter Dybjer.
15 February 2021.

We prove the following:

  For any universe 𝓤, there is a group in the successor universe 𝓤⁺
  which is not isomorphic to any group in 𝓤.

Of course, in the other direction, any group in 𝓤 has an isomorphic
copy in 𝓤⁺, so the above says that there are strictly more groups in
𝓤⁺ than in 𝓤.

We use the group freely generated by the (large) type of ordinals, in
conjunction with the Burali-Forti argument, for that purpose.

We work in a spartan Martin-Löf type theory, with the assumption that
propositional truncations exist and that the univalence axiom
holds. No other features of HoTT/UF are needed.

In particular, quotients, which we use to construct free groups, are
constructed using propositional truncation and function extensionality
and propositional extensionality. This construction of quotients
increases the universe level by one, but eliminates into any
universe. Part of the work performed in this module is to reduce the
universe level of the quotient by exploiting the fact that the (large)
type of ordinals is locally small.

In this module, as well as in the module Burali-Forti.lagda,
univalence plays a crucial role in various ways. In particular, in
this module it allows us to resize down our quotient construction.

The main difficulty is to show that the carrier of the group freely
generated by the type of ordinals in the universe 𝓤 is large, that is,
lives in the universe 𝓤⁺ and doesn't have a copy in the universe 𝓤.
In particular, we need to know that the inclusion of generators is
injective, which is proved in the module FreeGroup.lagda. But this is
is not enough: for example, the unique map P → 𝟙 is an embedding if P
is a proposition, and the terminal type 𝟙 is of course small, but P
doesn't need to be small (cf. work with Tom de Jong on size matters).
This is done in the module ResizeFreeGroup.lagda

\begin{code}

{-# OPTIONS --without-K --safe #-}

open import UF-PropTrunc
open import UF-Univalence
open import SpartanMLTT

module OrdinalsFreeGroup
        (pt : propositional-truncations-exist)
        (ua : Univalence)
       where

open import UF-FunExt
open import UF-UA-FunExt
open import UF-Subsingletons
open import UF-Equiv hiding (_≅_)
open import UF-Size

open import OrdinalsType hiding (⟨_⟩)
open import OrdinalOfOrdinals ua
open import BuraliForti ua
open import Groups
open import FreeGroup
open FreeGroupInterface pt (Univalence-gives-Fun-Ext ua)
                           (Univalence-gives-Prop-Ext ua)

large-group-with-no-small-copy : Σ F ꞉ Group (𝓤 ⁺) , ((G : Group 𝓤) → ¬ (G ≅ F))
large-group-with-no-small-copy {𝓤} = γ small-free-group
 where
  open import FreeGroupResizeDown
               pt ua
               (Ordinal 𝓤) type-of-ordinals-is-set
               _≃ₒ_ ≃ₒ-refl eqtoidₒ

  γ : (Σ F ꞉ Group (𝓤 ⁺) , F ≅ free-group (Ordinal 𝓤))
    → (Σ F ꞉ Group (𝓤 ⁺) , ((G : Group 𝓤) → ¬ (G ≅ F)))
  γ (F , f , f-is-equiv , f-is-hom) = F , β
   where
    β : (G : Group 𝓤) → G ≅ F → 𝟘
    β G (g , g-is-equiv , g-is-hom) = α
     where
      h : ⟨ free-group (Ordinal 𝓤) ⟩ has-size 𝓤
      h = ⟨ G ⟩ , f ∘ g , ∘-is-equiv g-is-equiv f-is-equiv

      α : 𝟘
      α = the-type-of-ordinals-is-large (free-group-small-gives-generating-set-small h)

\end{code}

Probably get rid of this module and move its contents to the module Burali-Forti.
